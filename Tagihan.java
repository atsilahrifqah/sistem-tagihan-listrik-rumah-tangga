/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TagihanListrikClient;

import ServerRMI.OperationRMI;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import javax.swing.JOptionPane;
import ServerRMI.Services;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author ASUS
 */
public class Tagihan extends javax.swing.JFrame {

    OperationRMI calc;
    
    public Tagihan() throws RemoteException, NotBoundException, MalformedURLException {
        initComponents();
        try {
            Registry register = LocateRegistry.getRegistry("172.125.2.212"); //note : ganti dengan IP PC Server
            calc = (OperationRMI) Naming.lookup("rmi://172.125.2.212:2000/services");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Tidak dapat terhubung ke server. Pastikan server RMI berjalan.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DayaGuna = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        LamaGuna = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        JumlahHari = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        JenisListrik = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        PPJ = new javax.swing.JTextField();
        TotalButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TotalTagihan = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Tagihan Listrik Rumah Tangga");

        jLabel2.setText("Daya Yang Digunakan");

        DayaGuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DayaGunaActionPerformed(evt);
            }
        });

        jLabel3.setText("Lama Penggunaan");

        LamaGuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LamaGunaActionPerformed(evt);
            }
        });

        jLabel4.setText("Jumlah Hari Dalam Sebulan");

        JumlahHari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JumlahHariActionPerformed(evt);
            }
        });

        jLabel5.setText("Jenis Listrik");

        JenisListrik.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "R-1/TR (900 VA)", "R-1/TR (1.300 VA)", "R-1/TR (2.200 VA)", "R-2/TR (3.500-5.500 VA)", "R-3/TR (6.600 VA ke atas)" }));
        JenisListrik.setSelectedItem(JenisListrik);
        JenisListrik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JenisListrikActionPerformed(evt);
            }
        });

        jLabel6.setText("Pajak PPJ");

        PPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PPJActionPerformed(evt);
            }
        });

        TotalButton.setText("Total Tagihan");
        TotalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Watt");

        jLabel8.setText("Jam");

        jLabel9.setText("Hari");

        jLabel10.setText("%");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N
        jLabel11.setText("*Ketentuan Pemerintah Daerah Setempat (3-10)%");

        TotalTagihan.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                TotalTagihanAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(TotalTagihan);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TotalButton)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LamaGuna, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DayaGuna, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10))
                            .addComponent(JenisListrik, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JumlahHari, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9))
                            .addComponent(jLabel11)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(75, 75, 75)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(DayaGuna, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LamaGuna, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JumlahHari, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(JenisListrik, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(PPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(TotalButton)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DayaGunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DayaGunaActionPerformed
        // TODO add your handling code here:
        try {
            double daya = Double.parseDouble(DayaGuna.getText());
            if (daya <= 0) {
                JOptionPane.showMessageDialog(this, "Daya harus lebih dari 0", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan angka yang valid untuk daya", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DayaGunaActionPerformed

    private void LamaGunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LamaGunaActionPerformed
        // TODO add your handling code here:
        try {
            double lamaGuna = Double.parseDouble(LamaGuna.getText());
            if (lamaGuna <= 0 || lamaGuna > 24) {
                JOptionPane.showMessageDialog(this, "Lama penggunaan harus antara 1-24 jam", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan angka yang valid untuk lama penggunaan", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_LamaGunaActionPerformed

    private void JumlahHariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JumlahHariActionPerformed
        // TODO add your handling code here:
        try {
            int jumlahHari = Integer.parseInt(JumlahHari.getText());
            if (jumlahHari <= 0 || jumlahHari > 31) {
                JOptionPane.showMessageDialog(this, "Jumlah hari harus antara 1-31", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan angka yang valid untuk jumlah hari", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_JumlahHariActionPerformed

    private void PPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PPJActionPerformed
        // TODO add your handling code here:
        try {
            String text = PPJ.getText().trim(); // Menghapus spasi ekstra
            if (text.isEmpty()) {
                JOptionPane.showMessageDialog(this, "PPJ tidak boleh kosong", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            double ppj = Double.parseDouble(text);

            if (ppj < 3 || ppj > 10) {
                JOptionPane.showMessageDialog(this, "PPJ harus dalam rentang 3-10%", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan angka yang valid untuk PPJ", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_PPJActionPerformed

    private void TotalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalButtonActionPerformed
        // TODO add your handling code here:
        try {
            // Cek jika ada kolom yang kosong selain TarifPerKwh
            if (DayaGuna.getText().isEmpty() || LamaGuna.getText().isEmpty() || 
                JumlahHari.getText().isEmpty() || PPJ.getText().isEmpty()) {
                    throw new IllegalArgumentException("Semua kolom harus diisi.");
            }

            // Ambil nilai dari input lainnya
            double daya = Double.parseDouble(DayaGuna.getText());
            double lamaGuna = Double.parseDouble(LamaGuna.getText());
            int jumlahHari = Integer.parseInt(JumlahHari.getText());
            double ppj = Double.parseDouble(PPJ.getText());

            // Tentukan tarif berdasarkan jenis listrik yang dipilih
            double tarifPerKwh = 0;
            String jenisListrik = (String) JenisListrik.getSelectedItem();

            // Tentukan tarif berdasarkan pilihan jenis listrik
            switch (jenisListrik) {
                case "R-1/TR (900 VA)":
                    tarifPerKwh = 1352;
                    break;
                case "R-1/TR (1.300 VA)":
                case "R-1/TR (2.200 VA)":
                    tarifPerKwh = 1444.70;
                    break;
                case "R-2/TR (3.500-5.500 VA)":
                case "R-3/TR (6.600 VA ke atas)":
                    tarifPerKwh = 1699.53;
                    break;
                default:
                    JOptionPane.showMessageDialog(this, "Pilih jenis listrik yang valid.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                    return; // Keluar jika jenis listrik tidak valid
            }

            // Validasi PPJ
            if (ppj < 3 || ppj > 10) {
                JOptionPane.showMessageDialog(this, "PPJ harus dalam rentang 3-10%", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }if (jumlahHari <= 0 || jumlahHari > 31) {
                    JOptionPane.showMessageDialog(this, "Jumlah hari harus antara 1-31", "Error", JOptionPane.ERROR_MESSAGE);
               return;
            }

            // Hitung konsumsi listrik dalam kWh
            double kWh = daya * lamaGuna * jumlahHari / 1000.0;  // Menghitung kWh

            // Hitung tagihan sebelum pajak
            double tagihanSebelumPajak = kWh * tarifPerKwh;

            // Hitung pajak PPJ
            double pajak = tagihanSebelumPajak * (ppj / 100.0);

            // Hitung total tagihan
            double totalTagihan = tagihanSebelumPajak + pajak;

            // Tampilkan total tagihan
            TotalTagihan.setText(String.format("Rp %.2f", totalTagihan));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Input harus berupa angka valid.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_TotalButtonActionPerformed

    private void JenisListrikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JenisListrikActionPerformed
        // TODO add your handling code here:
        String jenisListrik = (String) JenisListrik.getSelectedItem();

        double tarifPerKwh = 0;

        // Tentukan tarif berdasarkan pilihan jenis listrik
        switch (jenisListrik) {
            case "R-1/TR (900 VA)":
                tarifPerKwh = 1352; // Set tarif untuk 900 VA
                break;

            case "R-1/TR (1.300 VA)":
            case "R-1/TR (2.200 VA)":
                tarifPerKwh = 1444.70; // Set tarif untuk 1.300 VA dan 2.200 VA
                break;

            case "R-2/TR (3.500-5.500 VA)":
            case "R-3/TR (6.600 VA ke atas)":
                tarifPerKwh = 1699.53; // Set tarif untuk 3.500-5.500 VA dan 6.600 VA ke atas
                break;

            default:
                JOptionPane.showMessageDialog(this, "Pilih jenis listrik yang valid.", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;  // Keluar jika tidak ada jenis listrik yang dipilih
        }

    }//GEN-LAST:event_JenisListrikActionPerformed

    private void TotalTagihanAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TotalTagihanAncestorAdded
        // TODO add your handling code here:
        TotalTagihan.setText("Rp. 0.00");
        TotalTagihan.setEditable(false);
    }//GEN-LAST:event_TotalTagihanAncestorAdded

    /**
     * @param args the command line arguments
     */
     public static void main(String args[]) {
        try {
            // Menjalankan aplikasi GUI
            new Tagihan().setVisible(true);
        } catch (RemoteException | NotBoundException | MalformedURLException e) {
            // Menangani exception yang mungkin terjadi saat inisialisasi RMI
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DayaGuna;
    private javax.swing.JComboBox<String> JenisListrik;
    private javax.swing.JTextField JumlahHari;
    private javax.swing.JTextField LamaGuna;
    private javax.swing.JTextField PPJ;
    private javax.swing.JButton TotalButton;
    private javax.swing.JTextPane TotalTagihan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
